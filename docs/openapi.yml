openapi: 3.0.0
paths:
  /signin:
    post:
      summary: SignIn with existing account
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInInput"
      responses:
        "200":
          description: JWT Successfully created
          content:
            application/json:
              schema:
                type: string
                description: JWT created by portals-me.com
  /signup:
    post:
      summary: SignUp with user data
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpInput"
      responses:
        "200":
          description: JWT Successfully created
          content:
            application/json:
              schema:
                type: string
                description: JWT created by portals-me.com
  "/username/{name}":
    get:
      summary: Get the user by name
      tags:
        - auth
      parameters:
        - in: path
          required: true
          name: name
          schema:
            type: string
      responses:
        "200":
          description: Returns User record
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
  /self:
    get:
      summary: Get the requested user
      tags:
        - self
      responses:
        "200":
          description: Returns User record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      summary: Update the requested user
      tags:
        - self
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "So called `screen_name`, this must be unique among all users"
                picture:
                  type: string
                  format: url
                  description: URL for the avatar image
                display_name:
                  type: string
                  description: The name for profile
      responses:
        "204":
          description: No Content
  /twitter:
    post:
      summary: URL for Twitter callback
      description: This URL should be used for Twitter callback
      tags:
        - twitter
      responses:
        "200":
          description: Returns redirect URL
          content:
            application/json:
              schema:
                type: string
                format: url
                description: URL for redirection
    get:
      summary: Get Twitter credentials
      tags:
        - twitter
      responses:
        "200":
          description: Returns Twitter credentials and account information
          content:
            application/json:
              schema:
                type: object
                properties:
                  credential_token:
                    type: string
                  credential_secret:
                    type: string
                  account:
                    type: object
                    properties:
                      id_str:
                        type: string
                      screen_name:
                        type: string
                      name:
                        type: string
                        description: display_name
                      profile_image_url:
                        type: string
                        format: url
                    description: Twitter user information
info:
  title: Account Service API Spec
  version: 1.0.0
components:
  schemas:
    SignInInput:
      type: object
      properties:
        auth_type:
          enum:
            - password
            - twitter
            - google
          type: string
        data:
          oneOf:
            - type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
              description: Valid when auth_type is `password`
            - type: object
              properties:
                credential_token:
                  type: string
                credential_secret:
                  type: string
              description: Valid when auth_type is `twitter`
            - type: object
              properties:
                token:
                  type: string
                  description: Google id token
              description: Valid when auth_type is `google`
    SignUpInput:
      type: object
      properties:
        user:
          type: object
          properties:
            name:
              type: string
              description: "So called `screen_name`, this must be unique among all users"
            picture:
              type: string
              format: url
              description: URL for the avatar image
            display_name:
              type: string
              description: The name for profile
        auth_type:
          enum:
            - password
            - twitter
            - google
          type: string
        data:
          oneOf:
            - type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
              description: Valid when auth_type is `password`
            - type: object
              properties:
                credential_token:
                  type: string
                credential_secret:
                  type: string
              description: Valid when auth_type is `twitter`
            - type: object
              properties:
                token:
                  type: string
                  description: Google id token
              description: Valid when auth_type is `google`
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: "So called `screen_name`, this must be unique among all users"
        picture:
          type: string
          format: url
          description: URL for the avatar image
        display_name:
          type: string
          description: The name for profile
